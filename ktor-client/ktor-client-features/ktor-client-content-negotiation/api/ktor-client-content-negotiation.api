public final class io/ktor/client/features/ContentConverterException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public final class io/ktor/client/features/ContentNegotiation {
	public static final field Feature Lio/ktor/client/features/ContentNegotiation$Feature;
}

public final class io/ktor/client/features/ContentNegotiation$Config : io/ktor/common/serialization/Configuration {
	public fun <init> ()V
	public final fun register (Lio/ktor/http/ContentType;Lio/ktor/common/serialization/ContentConverter;Lio/ktor/http/ContentTypeMatcher;Lkotlin/jvm/functions/Function1;)V
	public fun register (Lio/ktor/http/ContentType;Lio/ktor/common/serialization/ContentConverter;Lkotlin/jvm/functions/Function1;)V
	public final fun registerJson (Lio/ktor/http/ContentType;Lio/ktor/common/serialization/ContentConverter;Lio/ktor/http/ContentTypeMatcher;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun registerJson$default (Lio/ktor/client/features/ContentNegotiation$Config;Lio/ktor/http/ContentType;Lio/ktor/common/serialization/ContentConverter;Lio/ktor/http/ContentTypeMatcher;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
}

public final class io/ktor/client/features/ContentNegotiation$Feature : io/ktor/client/features/HttpClientFeature {
	public fun getKey ()Lio/ktor/util/AttributeKey;
	public fun install (Lio/ktor/client/features/ContentNegotiation;Lio/ktor/client/HttpClient;)V
	public synthetic fun install (Ljava/lang/Object;Lio/ktor/client/HttpClient;)V
	public fun prepare (Lkotlin/jvm/functions/Function1;)Lio/ktor/client/features/ContentNegotiation;
	public synthetic fun prepare (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class io/ktor/client/features/DefaultJvmKt {
	public static final fun defaultSerializer ()Lio/ktor/common/serialization/ContentConverter;
}

public final class io/ktor/client/features/JsonContentTypeMatcher : io/ktor/http/ContentTypeMatcher {
	public fun <init> ()V
	public fun contains (Lio/ktor/http/ContentType;)Z
}

